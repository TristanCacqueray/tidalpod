{- Podenv Dhall configuration for tidal
-}

let Podenv = env:PODENV_PRELUDE

let Hub = env:PODENV_HUB

let SuperCollider =
      [ "https://copr-be.cloud.fedoraproject.org/results/tdecacqu/supercollider/fedora-rawhide-x86_64/01182887-supercollider/supercollider-3.10.4-1.fc32.x86_64.rpm"
      , "https://copr-be.cloud.fedoraproject.org/results/tdecacqu/supercollider/fedora-rawhide-x86_64/01182887-supercollider/supercollider-emacs-3.10.4-1.fc32.noarch.rpm"
      , "https://copr-be.cloud.fedoraproject.org/results/tdecacqu/supercollider/fedora-rawhide-x86_64/01182894-supercollider-sc3-plugins/supercollider-sc3-plugins-3.10.0-3.fc32.x86_64.rpm"
      ]

let SuperDirt = [ "git", "which", "xorg-x11-server-Xvfb", "rsync" ]

let Tidal = [ "cabal-install", "zlib-devel" ]

let Tools = [ "findutils", "procps-ng", "iproute" ]

let Base =
      Hub.Runtimes.Fedora.Create.Latest
        Podenv.Schemas.Env::{
        , name = "tidal"
        , command = Some [ "emacs", "-l", "init.el" ]
        , packages = Some (SuperCollider # SuperDirt # Tidal # Tools)
        , environ = Some (toMap { JACK_NO_AUDIO_RESERVATION = "1" })
        , capabilities = Podenv.Schemas.Capabilities::{
          , terminal = Some True
          , uidmap = Some True
          , mount-cwd = Some True
          , alsa = Some True
          , dri = Some True
          , x11 = Some True
          }
        }

let {- This is quite dirty, sclang batch mode requires some tricks...
       The `sleep 300` could be replaced by something that wait for ~/.local/share/SuperCollider lib
    -} InstallSuperDirt =
      Podenv.Schemas.Task::{
      , name = Some "Install SuperDirt"
      , shell = Some
          (     "(echo 'Quarks.checkForUpdates({Quarks.install(\"SuperDirt\", \"v1.1.1\"); thisProcess.recompile()})'; sleep 300; echo 0.exit) | "
            ++  "su user bash -c '/usr/bin/Xvfb :99 -ac -screen 0 1280x1024x16 & "
            ++  "QT_PLATFORM_PLUGIN=offscreen DISPLAY=:99.0 sclang'"
          )
      }

let {- https://github.com/haskell/cabal/issues/5516
    -} FixCabal =
      "mkdir -p ~/.cabal/store/ghc-8.6.5/package.db"

in      Base
    //  { container-file = Some
            (   Hub.Functions.getContainerFile Base
              # [ InstallSuperDirt
                , Podenv.Schemas.Task::{
                  , name = Some "Install tidal"
                  , shell = Some
                      (     "su user bash -c 'cd /home/user"
                        ++  " && cabal new-update"
                        ++  " && ${FixCabal}"
                        ++  " && cabal new-install tidal --lib"
                        ++  "'"
                      )
                  }
                , Podenv.Schemas.Task::{
                  , name = Some "Copy the bootstrap emacs conf"
                  , copy = Some
                      { dest = "/usr/share/emacs/tidal-setup.el"
                      , content = ./setup.el as Text
                      }
                  }
                , Podenv.Schemas.Task::{
                  , name = Some "Install emacs packages"
                  , shell = Some
                      (     "emacs --batch -Q --eval"
                        ++  " '(setq package-user-dir \"/usr/share/emacs/site-lisp/elpa\")'"
                        ++  " -l /usr/share/emacs/tidal-setup.el"
                      )
                  }
                , Podenv.Schemas.Task::{
                  , name = Some "Fix global install permission"
                  , shell = Some
                      "chmod -R 755 /usr/share/emacs/site-lisp/elpa/gnupg/"
                  }
                ]
            )
        }
